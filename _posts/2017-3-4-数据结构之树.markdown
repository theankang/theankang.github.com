---
layout:     post
title:      数据结构之树
author:     theankang
tags:       数据结构 树
subtitle:  	
category:  
---
先来说一说树和堆的区别.
- 树     只要无环无向联通图都叫树
- 堆     二叉堆 简称堆 父节点比两个子节点大（小）
  - 堆是一种***特殊的完全二叉树***
  - 二叉树 左节点比父节点小，右节点比父节点大
写到这里, 我对于***树***这种数据结构也是感到很困惑, 于是查了wiki, 把他的分类粘贴上来.

###树的种类
- 无序树 : 树中任意节点的子节点之间没有顺序关系
- 有序树 : 有顺序关系
  - 二叉树 : 每个节点最多含有两个子树的树称为二叉树
    - 完全二叉树 : 除了最底一层外, 其他各层节点数已满, 且最后一层节点从左到右连续排列
      - 满二叉树 : 最后一层的节点数也达最大值
    - 平衡二叉树(AVL树) : 当且仅当任何节点的两棵子树的高度差不大于1的二叉树
    - 二叉查找树 : 中序遍历结果即是节点从小到大的排列
  - Huffman树 : 带权路径最短的二叉树
  - B树 : 一种对读写操作进行优化的自平衡的二叉查找树，能够保持数据有序，拥有多余两个子树
  
红黑树（英语：Red–black tree）是一种自平衡二叉查找树，它可以在O(log n)时间内做查找，插入和删除。
红黑树相对于AVL树来说，牺牲了部分平衡性以换取插入/删除操作时少量的旋转操作，整体来说性能要优于AVL树。